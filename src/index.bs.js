// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as App from "./App.bs.js";
import * as Urql from "urql";
import * as $$Array from "bs-platform/lib/es6/array.js";
import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as ReactDOMRe from "reason-react/src/ReactDOMRe.js";
import * as ReasonUrql from "reason-urql/src/ReasonUrql.bs.js";
import * as SubscriptionsTransportWs from "subscriptions-transport-ws";

var client = new SubscriptionsTransportWs.SubscriptionClient("ws://localhost:4001/graphql", { });

function forwardSubscription(operation) {
  return client.request(operation);
}

var subscriptionExchangeOpts = {
  forwardSubscription: forwardSubscription
};

var subscriptionExchange = Urql.subscriptionExchange(subscriptionExchangeOpts);

var urqlClient = Curry._6(ReasonUrql.Client.make, "http://localhost:4000/graphql", undefined, $$Array.append(Urql.defaultExchanges, /* array */[subscriptionExchange]), undefined, undefined, /* () */0);

ReactDOMRe.renderToElementWithId(React.createElement(Urql.Provider, {
          value: urqlClient,
          children: React.createElement(App.make, { })
        }), "root");

export {
  client ,
  forwardSubscription ,
  subscriptionExchangeOpts ,
  subscriptionExchange ,
  urqlClient ,
  
}
/* client Not a pure module */
